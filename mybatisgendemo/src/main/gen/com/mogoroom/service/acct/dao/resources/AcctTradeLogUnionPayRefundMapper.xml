<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mogoroom.service.acct.dao.AcctTradeLogUnionPayRefundMapper" >
  <resultMap id="BaseResultMap" type="com.mogoroom.service.acct.domain.AcctTradeLogUnionPayRefund" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="tradeLogUnionPayId" property="tradeLogUnionPayId" jdbcType="INTEGER" />
    <result column="refundRequestTime" property="refundRequestTime" jdbcType="TIMESTAMP" />
    <result column="refundRequestCallbackTime" property="refundRequestCallbackTime" jdbcType="TIMESTAMP" />
    <result column="refundQueryId" property="refundQueryId" jdbcType="VARCHAR" />
    <result column="refundAmount" property="refundAmount" jdbcType="DECIMAL" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.mogoroom.service.acct.domain.AcctTradeLogUnionPayRefundWithBLOBs" extends="BaseResultMap" >
    <result column="refundRequest" property="refundRequest" jdbcType="LONGVARCHAR" />
    <result column="refundRequestCallback" property="refundRequestCallback" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, tradeLogUnionPayId, refundRequestTime, refundRequestCallbackTime, refundQueryId, 
    refundAmount
  </sql>
  <sql id="Blob_Column_List" >
    refundRequest, refundRequestCallback
  </sql>
  <select resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" id="selectById" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from acct_tradelog_unionpay_refund
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete parameterType="java.lang.Integer" id="delete" >
    delete from acct_tradelog_unionpay_refund
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert parameterType="com.mogoroom.service.acct.domain.AcctTradeLogUnionPayRefundWithBLOBs" useGeneratedKeys="true" keyProperty="id" id="insert" >
    insert into acct_tradelog_unionpay_refund
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tradeLogUnionPayId != null" >
        tradeLogUnionPayId,
      </if>
      <if test="refundRequestTime != null" >
        refundRequestTime,
      </if>
      <if test="refundRequestCallbackTime != null" >
        refundRequestCallbackTime,
      </if>
      <if test="refundQueryId != null" >
        refundQueryId,
      </if>
      <if test="refundAmount != null" >
        refundAmount,
      </if>
      <if test="refundRequest != null" >
        refundRequest,
      </if>
      <if test="refundRequestCallback != null" >
        refundRequestCallback,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tradeLogUnionPayId != null" >
        #{tradeLogUnionPayId,jdbcType=INTEGER},
      </if>
      <if test="refundRequestTime != null" >
        #{refundRequestTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundRequestCallbackTime != null" >
        #{refundRequestCallbackTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundQueryId != null" >
        #{refundQueryId,jdbcType=VARCHAR},
      </if>
      <if test="refundAmount != null" >
        #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundRequest != null" >
        #{refundRequest,jdbcType=LONGVARCHAR},
      </if>
      <if test="refundRequestCallback != null" >
        #{refundRequestCallback,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update parameterType="com.mogoroom.service.acct.domain.AcctTradeLogUnionPayRefundWithBLOBs" id="update" >
    update acct_tradelog_unionpay_refund
    <set >
      <if test="tradeLogUnionPayId != null" >
        tradeLogUnionPayId = #{tradeLogUnionPayId,jdbcType=INTEGER},
      </if>
      <if test="refundRequestTime != null" >
        refundRequestTime = #{refundRequestTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundRequestCallbackTime != null" >
        refundRequestCallbackTime = #{refundRequestCallbackTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundQueryId != null" >
        refundQueryId = #{refundQueryId,jdbcType=VARCHAR},
      </if>
      <if test="refundAmount != null" >
        refundAmount = #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundRequest != null" >
        refundRequest = #{refundRequest,jdbcType=LONGVARCHAR},
      </if>
      <if test="refundRequestCallback != null" >
        refundRequestCallback = #{refundRequestCallback,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from acct_tradelog_unionpay_refund
  </select>

  <select id="selectListPageInfo" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from acct_tradelog_unionpay_refund
	where 1=1
	    <if test="po.id != null" >
          and id = #{po.id,jdbcType=INTEGER}
    </if>
    <if test="po.tradeLogUnionPayId != null" >
          and tradeLogUnionPayId = #{po.tradeLogUnionPayId,jdbcType=INTEGER}
    </if>
    <if test="po.refundRequestTime != null" >
          and refundRequestTime = #{po.refundRequestTime,jdbcType=TIMESTAMP}
    </if>
    <if test="po.refundRequestCallbackTime != null" >
          and refundRequestCallbackTime = #{po.refundRequestCallbackTime,jdbcType=TIMESTAMP}
    </if>
    <if test="po.refundQueryId != null" >
          and refundQueryId = #{po.refundQueryId,jdbcType=VARCHAR}
    </if>
    <if test="po.refundAmount != null" >
          and refundAmount = #{po.refundAmount,jdbcType=DECIMAL}
    </if>
    <if test="po.refundRequest != null" >
          and refundRequest = #{po.refundRequest,jdbcType=LONGVARCHAR}
    </if>
    <if test="po.refundRequestCallback != null" >
          and refundRequestCallback = #{po.refundRequestCallback,jdbcType=LONGVARCHAR}
    </if>

  </select>

  <delete id="deleteByFeature" parameterType="com.mogoroom.service.acct.domain.AcctTradeLogUnionPayRefund" >
    delete from acct_tradelog_unionpay_refund
	<where> 
	      <if test="id != null" >
          and id = #{id,jdbcType=INTEGER}
    </if>
    <if test="tradeLogUnionPayId != null" >
          and tradeLogUnionPayId = #{tradeLogUnionPayId,jdbcType=INTEGER}
    </if>
    <if test="refundRequestTime != null" >
          and refundRequestTime = #{refundRequestTime,jdbcType=TIMESTAMP}
    </if>
    <if test="refundRequestCallbackTime != null" >
          and refundRequestCallbackTime = #{refundRequestCallbackTime,jdbcType=TIMESTAMP}
    </if>
    <if test="refundQueryId != null" >
          and refundQueryId = #{refundQueryId,jdbcType=VARCHAR}
    </if>
    <if test="refundAmount != null" >
          and refundAmount = #{refundAmount,jdbcType=DECIMAL}
    </if>
    <if test="refundRequest != null" >
          and refundRequest = #{refundRequest,jdbcType=LONGVARCHAR}
    </if>
    <if test="refundRequestCallback != null" >
          and refundRequestCallback = #{refundRequestCallback,jdbcType=LONGVARCHAR}
    </if>

 </where>
    </delete>

  <select id="selectByFeature" parameterType="com.mogoroom.service.acct.domain.AcctTradeLogUnionPayRefund" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from acct_tradelog_unionpay_refund
	where 1=1
	    <if test="id != null" >
          and id = #{id,jdbcType=INTEGER}
    </if>
    <if test="tradeLogUnionPayId != null" >
          and tradeLogUnionPayId = #{tradeLogUnionPayId,jdbcType=INTEGER}
    </if>
    <if test="refundRequestTime != null" >
          and refundRequestTime = #{refundRequestTime,jdbcType=TIMESTAMP}
    </if>
    <if test="refundRequestCallbackTime != null" >
          and refundRequestCallbackTime = #{refundRequestCallbackTime,jdbcType=TIMESTAMP}
    </if>
    <if test="refundQueryId != null" >
          and refundQueryId = #{refundQueryId,jdbcType=VARCHAR}
    </if>
    <if test="refundAmount != null" >
          and refundAmount = #{refundAmount,jdbcType=DECIMAL}
    </if>
    <if test="refundRequest != null" >
          and refundRequest = #{refundRequest,jdbcType=LONGVARCHAR}
    </if>
    <if test="refundRequestCallback != null" >
          and refundRequestCallback = #{refundRequestCallback,jdbcType=LONGVARCHAR}
    </if>

  </select>

  <select id="selectByFieldList" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from acct_tradelog_unionpay_refund
    where ${field} in
    <foreach close=")" collection="values" item="val" open="(" separator=",">
	        #{val}
  </foreach>
  </select>

<select id="selectByCriteria" resultMap="BaseResultMap" parameterType="com.mogoroom.service.base.dao.QCriteria">
		SELECT
		<include refid="Base_Column_List" />
		FROM acct_tradelog_unionpay_refund
		<where>
			<if test="conditionAndRelations != null and conditionAndRelations.size() > 0">
				<foreach collection="conditionAndRelations" item="cr">
					${cr.andOr}
					<foreach collection="cr.conditions" item="c" open="(" separator="AND" close=")">
						${c.field} ${c.op}
						<choose>
							<when test="c.valueList != null">
								<foreach collection="c.valueList" item="val" separator="," open="(" close=")">
									#{val}
								</foreach>
							</when>
							<when test="c.value != null">
								#{c.value}
							</when>
						</choose>

					</foreach>

				</foreach>
			</if>
		</where>
		<if test="orderBys != null and orderBys.size() > 0">
			ORDER BY
			<foreach collection="orderBys" item="ob" separator="," >
				${ob.orderBySql}
			</foreach>
		</if>
		<if test="limit != null">
		   LIMIT #{limit}
		   <if test="offset != null">
		   OFFSET #{offset}
		   </if>
		</if>
	</select>

</mapper>