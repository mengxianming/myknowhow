<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mogoroom.service.acct.dao.CheckAcctFundDetailMapper">
  <resultMap id="BaseResultMap" type="com.mogoroom.service.acct.domain.CheckAcctFundDetail">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="checkId" jdbcType="INTEGER" property="checkId" />
    <result column="accountId" jdbcType="INTEGER" property="accountId" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="updateBy" jdbcType="INTEGER" property="updateBy" />
    <result column="fixed" jdbcType="TINYINT" property="fixed" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="verified" jdbcType="TINYINT" property="verified" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="errorType" jdbcType="TINYINT" property="errorType" />
  </resultMap>
  <sql id="Base_Column_List">
    id, checkId, accountId, createTime, updateTime, updateBy, fixed, remark, verified, 
    content, errorType
  </sql>
  <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from acct_checkacctfunddetail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="delete" parameterType="java.lang.Integer">
    delete from acct_checkacctfunddetail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.mogoroom.service.acct.domain.CheckAcctFundDetail" useGeneratedKeys="true">
    insert into acct_checkacctfunddetail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="checkId != null">
        checkId,
      </if>
      <if test="accountId != null">
        accountId,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="updateBy != null">
        updateBy,
      </if>
      <if test="fixed != null">
        fixed,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="verified != null">
        verified,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="errorType != null">
        errorType,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="checkId != null">
        #{checkId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="fixed != null">
        #{fixed,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="verified != null">
        #{verified,jdbcType=TINYINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="errorType != null">
        #{errorType,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="com.mogoroom.service.acct.domain.CheckAcctFundDetail">
    update acct_checkacctfunddetail
    <set>
      <if test="checkId != null">
        checkId = #{checkId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null">
        accountId = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        updateBy = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="fixed != null">
        fixed = #{fixed,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="verified != null">
        verified = #{verified,jdbcType=TINYINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="errorType != null">
        errorType = #{errorType,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from acct_checkacctfunddetail
  </select>

  <select id="selectListPageInfo" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from acct_checkacctfunddetail
	where 1=1
	    <if test="po.id != null">
          and id = #{po.id,jdbcType=INTEGER}
    </if>
    <if test="po.checkId != null">
          and checkId = #{po.checkId,jdbcType=INTEGER}
    </if>
    <if test="po.accountId != null">
          and accountId = #{po.accountId,jdbcType=INTEGER}
    </if>
    <if test="po.createTime != null">
          and createTime = #{po.createTime,jdbcType=TIMESTAMP}
    </if>
    <if test="po.updateTime != null">
          and updateTime = #{po.updateTime,jdbcType=TIMESTAMP}
    </if>
    <if test="po.updateBy != null">
          and updateBy = #{po.updateBy,jdbcType=INTEGER}
    </if>
    <if test="po.fixed != null">
          and fixed = #{po.fixed,jdbcType=TINYINT}
    </if>
    <if test="po.remark != null">
          and remark = #{po.remark,jdbcType=VARCHAR}
    </if>
    <if test="po.verified != null">
          and verified = #{po.verified,jdbcType=TINYINT}
    </if>
    <if test="po.content != null">
          and content = #{po.content,jdbcType=VARCHAR}
    </if>
    <if test="po.errorType != null">
          and errorType = #{po.errorType,jdbcType=TINYINT}
    </if>

  </select>
  <resultMap id="BaseResultMap" type="com.mogoroom.service.acct.domain.CheckAcctFundDetail">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="checkId" jdbcType="INTEGER" property="checkId" />
    <result column="accountId" jdbcType="INTEGER" property="accountId" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="updateBy" jdbcType="INTEGER" property="updateBy" />
    <result column="fixed" jdbcType="TINYINT" property="fixed" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="verified" jdbcType="TINYINT" property="verified" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="errorType" jdbcType="TINYINT" property="errorType" />
  </resultMap>
  <sql id="Base_Column_List">
    id, checkId, accountId, createTime, updateTime, updateBy, fixed, remark, verified, 
    content, errorType
  </sql>
  <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from acct_checkacctfunddetail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="delete" parameterType="java.lang.Integer">
    delete from acct_checkacctfunddetail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.mogoroom.service.acct.domain.CheckAcctFundDetail" useGeneratedKeys="true">
    insert into acct_checkacctfunddetail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="checkId != null">
        checkId,
      </if>
      <if test="accountId != null">
        accountId,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="updateBy != null">
        updateBy,
      </if>
      <if test="fixed != null">
        fixed,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="verified != null">
        verified,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="errorType != null">
        errorType,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="checkId != null">
        #{checkId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="fixed != null">
        #{fixed,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="verified != null">
        #{verified,jdbcType=TINYINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="errorType != null">
        #{errorType,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="com.mogoroom.service.acct.domain.CheckAcctFundDetail">
    update acct_checkacctfunddetail
    <set>
      <if test="checkId != null">
        checkId = #{checkId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null">
        accountId = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        updateBy = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="fixed != null">
        fixed = #{fixed,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="verified != null">
        verified = #{verified,jdbcType=TINYINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="errorType != null">
        errorType = #{errorType,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from acct_checkacctfunddetail
  </select>

  <select id="selectListPageInfo" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from acct_checkacctfunddetail
	where 1=1
	    <if test="po.id != null">
          and id = #{po.id,jdbcType=INTEGER}
    </if>
    <if test="po.checkId != null">
          and checkId = #{po.checkId,jdbcType=INTEGER}
    </if>
    <if test="po.accountId != null">
          and accountId = #{po.accountId,jdbcType=INTEGER}
    </if>
    <if test="po.createTime != null">
          and createTime = #{po.createTime,jdbcType=TIMESTAMP}
    </if>
    <if test="po.updateTime != null">
          and updateTime = #{po.updateTime,jdbcType=TIMESTAMP}
    </if>
    <if test="po.updateBy != null">
          and updateBy = #{po.updateBy,jdbcType=INTEGER}
    </if>
    <if test="po.fixed != null">
          and fixed = #{po.fixed,jdbcType=TINYINT}
    </if>
    <if test="po.remark != null">
          and remark = #{po.remark,jdbcType=VARCHAR}
    </if>
    <if test="po.verified != null">
          and verified = #{po.verified,jdbcType=TINYINT}
    </if>
    <if test="po.content != null">
          and content = #{po.content,jdbcType=VARCHAR}
    </if>
    <if test="po.errorType != null">
          and errorType = #{po.errorType,jdbcType=TINYINT}
    </if>

  </select>

</mapper>