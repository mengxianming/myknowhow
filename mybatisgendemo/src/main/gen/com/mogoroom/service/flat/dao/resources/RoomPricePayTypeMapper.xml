<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mogoroom.service.flat.dao.RoomPricePayTypeMapper">
  <resultMap id="BaseResultMap" type="com.mogoroom.service.flat.domain.RoomPricePayType">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="rentPeriods" jdbcType="TINYINT" property="rentPeriods" />
    <result column="foregiftPeriods" jdbcType="TINYINT" property="foregiftPeriods" />
    <result column="finProdType" jdbcType="TINYINT" property="finProdType" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, rentPeriods, foregiftPeriods, finProdType
  </sql>
  <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comm_paytype
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="delete" parameterType="java.lang.Integer">
    delete from comm_paytype
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.mogoroom.service.flat.domain.RoomPricePayType" useGeneratedKeys="true">
    insert into comm_paytype
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="rentPeriods != null">
        rentPeriods,
      </if>
      <if test="foregiftPeriods != null">
        foregiftPeriods,
      </if>
      <if test="finProdType != null">
        finProdType,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="rentPeriods != null">
        #{rentPeriods,jdbcType=TINYINT},
      </if>
      <if test="foregiftPeriods != null">
        #{foregiftPeriods,jdbcType=TINYINT},
      </if>
      <if test="finProdType != null">
        #{finProdType,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="com.mogoroom.service.flat.domain.RoomPricePayType">
    update comm_paytype
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="rentPeriods != null">
        rentPeriods = #{rentPeriods,jdbcType=TINYINT},
      </if>
      <if test="foregiftPeriods != null">
        foregiftPeriods = #{foregiftPeriods,jdbcType=TINYINT},
      </if>
      <if test="finProdType != null">
        finProdType = #{finProdType,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comm_paytype
  </select>

  <select id="selectListPageInfo" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comm_paytype
	where 1=1
	    <if test="po.id != null">
          and id = #{po.id,jdbcType=INTEGER}
    </if>
    <if test="po.name != null">
          and name = #{po.name,jdbcType=VARCHAR}
    </if>
    <if test="po.rentPeriods != null">
          and rentPeriods = #{po.rentPeriods,jdbcType=TINYINT}
    </if>
    <if test="po.foregiftPeriods != null">
          and foregiftPeriods = #{po.foregiftPeriods,jdbcType=TINYINT}
    </if>
    <if test="po.finProdType != null">
          and finProdType = #{po.finProdType,jdbcType=TINYINT}
    </if>

  </select>

  <delete id="deleteByFeature" parameterType="com.mogoroom.service.flat.domain.RoomPricePayType">
    delete from comm_paytype
	<where> 
	      <if test="id != null">
          and id = #{id,jdbcType=INTEGER}
    </if>
    <if test="name != null">
          and name = #{name,jdbcType=VARCHAR}
    </if>
    <if test="rentPeriods != null">
          and rentPeriods = #{rentPeriods,jdbcType=TINYINT}
    </if>
    <if test="foregiftPeriods != null">
          and foregiftPeriods = #{foregiftPeriods,jdbcType=TINYINT}
    </if>
    <if test="finProdType != null">
          and finProdType = #{finProdType,jdbcType=TINYINT}
    </if>

 </where>
    </delete>

  <select id="selectByFeature" parameterType="com.mogoroom.service.flat.domain.RoomPricePayType" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comm_paytype
	where 1=1
	    <if test="id != null">
          and id = #{id,jdbcType=INTEGER}
    </if>
    <if test="name != null">
          and name = #{name,jdbcType=VARCHAR}
    </if>
    <if test="rentPeriods != null">
          and rentPeriods = #{rentPeriods,jdbcType=TINYINT}
    </if>
    <if test="foregiftPeriods != null">
          and foregiftPeriods = #{foregiftPeriods,jdbcType=TINYINT}
    </if>
    <if test="finProdType != null">
          and finProdType = #{finProdType,jdbcType=TINYINT}
    </if>

  </select>

  <select id="selectByFieldList" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comm_paytype
    where ${field} in
    <foreach close=")" collection="values" item="val" open="(" separator=",">
	        #{val}
  </foreach>
  </select>

<select id="selectByCriteria" parameterType="com.mogoroom.service.base.dao.QCriteria" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM comm_paytype
		<where>
			<if test="conditionAndRelations != null and conditionAndRelations.size() &gt; 0">
				<foreach collection="conditionAndRelations" item="cr">
					${cr.andOr}
					<foreach close=")" collection="cr.conditions" item="c" open="(" separator="AND">
						${c.field} ${c.op}
						<choose>
							<when test="c.valueList != null">
								<foreach close=")" collection="c.valueList" item="val" open="(" separator=",">
									#{val}
								</foreach>
							</when>
							<when test="c.value != null">
								#{c.value}
							</when>
						</choose>

					</foreach>

				</foreach>
			</if>
		</where>
		<if test="orderBys != null and orderBys.size() &gt; 0">
			ORDER BY
			<foreach collection="orderBys" item="ob" separator=",">
				${ob.orderBySql}
			</foreach>
		</if>
		<if test="limit != null">
		   LIMIT #{limit}
		   <if test="offset != null">
		   OFFSET #{offset}
		   </if>
		</if>
	</select>
  <resultMap id="BaseResultMap" type="com.mogoroom.service.flat.domain.RoomPricePayType">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="rentPeriods" jdbcType="TINYINT" property="rentPeriods" />
    <result column="foregiftPeriods" jdbcType="TINYINT" property="foregiftPeriods" />
    <result column="finProdType" jdbcType="TINYINT" property="finProdType" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, rentPeriods, foregiftPeriods, finProdType
  </sql>
  <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comm_paytype
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="delete" parameterType="java.lang.Integer">
    delete from comm_paytype
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.mogoroom.service.flat.domain.RoomPricePayType" useGeneratedKeys="true">
    insert into comm_paytype
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="rentPeriods != null">
        rentPeriods,
      </if>
      <if test="foregiftPeriods != null">
        foregiftPeriods,
      </if>
      <if test="finProdType != null">
        finProdType,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="rentPeriods != null">
        #{rentPeriods,jdbcType=TINYINT},
      </if>
      <if test="foregiftPeriods != null">
        #{foregiftPeriods,jdbcType=TINYINT},
      </if>
      <if test="finProdType != null">
        #{finProdType,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="com.mogoroom.service.flat.domain.RoomPricePayType">
    update comm_paytype
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="rentPeriods != null">
        rentPeriods = #{rentPeriods,jdbcType=TINYINT},
      </if>
      <if test="foregiftPeriods != null">
        foregiftPeriods = #{foregiftPeriods,jdbcType=TINYINT},
      </if>
      <if test="finProdType != null">
        finProdType = #{finProdType,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comm_paytype
  </select>

  <select id="selectListPageInfo" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comm_paytype
	where 1=1
	    <if test="po.id != null">
          and id = #{po.id,jdbcType=INTEGER}
    </if>
    <if test="po.name != null">
          and name = #{po.name,jdbcType=VARCHAR}
    </if>
    <if test="po.rentPeriods != null">
          and rentPeriods = #{po.rentPeriods,jdbcType=TINYINT}
    </if>
    <if test="po.foregiftPeriods != null">
          and foregiftPeriods = #{po.foregiftPeriods,jdbcType=TINYINT}
    </if>
    <if test="po.finProdType != null">
          and finProdType = #{po.finProdType,jdbcType=TINYINT}
    </if>

  </select>

  <delete id="deleteByFeature" parameterType="com.mogoroom.service.flat.domain.RoomPricePayType">
    delete from comm_paytype
	<where> 
	      <if test="id != null">
          and id = #{id,jdbcType=INTEGER}
    </if>
    <if test="name != null">
          and name = #{name,jdbcType=VARCHAR}
    </if>
    <if test="rentPeriods != null">
          and rentPeriods = #{rentPeriods,jdbcType=TINYINT}
    </if>
    <if test="foregiftPeriods != null">
          and foregiftPeriods = #{foregiftPeriods,jdbcType=TINYINT}
    </if>
    <if test="finProdType != null">
          and finProdType = #{finProdType,jdbcType=TINYINT}
    </if>

 </where>
    </delete>

  <select id="selectByFeature" parameterType="com.mogoroom.service.flat.domain.RoomPricePayType" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comm_paytype
	where 1=1
	    <if test="id != null">
          and id = #{id,jdbcType=INTEGER}
    </if>
    <if test="name != null">
          and name = #{name,jdbcType=VARCHAR}
    </if>
    <if test="rentPeriods != null">
          and rentPeriods = #{rentPeriods,jdbcType=TINYINT}
    </if>
    <if test="foregiftPeriods != null">
          and foregiftPeriods = #{foregiftPeriods,jdbcType=TINYINT}
    </if>
    <if test="finProdType != null">
          and finProdType = #{finProdType,jdbcType=TINYINT}
    </if>

  </select>

  <select id="selectByFieldList" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comm_paytype
    where ${field} in
    <foreach close=")" collection="values" item="val" open="(" separator=",">
	        #{val}
  </foreach>
  </select>

<select id="selectByCriteria" parameterType="com.mogoroom.service.base.dao.QCriteria" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM comm_paytype
		<where>
			<if test="conditionAndRelations != null and conditionAndRelations.size() &gt; 0">
				<foreach collection="conditionAndRelations" item="cr">
					${cr.andOr}
					<foreach close=")" collection="cr.conditions" item="c" open="(" separator="AND">
						${c.field} ${c.op}
						<choose>
							<when test="c.valueList != null">
								<foreach close=")" collection="c.valueList" item="val" open="(" separator=",">
									#{val}
								</foreach>
							</when>
							<when test="c.value != null">
								#{c.value}
							</when>
						</choose>

					</foreach>

				</foreach>
			</if>
		</where>
		<if test="orderBys != null and orderBys.size() &gt; 0">
			ORDER BY
			<foreach collection="orderBys" item="ob" separator=",">
				${ob.orderBySql}
			</foreach>
		</if>
		<if test="limit != null">
		   LIMIT #{limit}
		   <if test="offset != null">
		   OFFSET #{offset}
		   </if>
		</if>
	</select>
  <resultMap id="BaseResultMap" type="com.mogoroom.service.flat.domain.RoomPricePayType">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="rentPeriods" jdbcType="TINYINT" property="rentPeriods" />
    <result column="foregiftPeriods" jdbcType="TINYINT" property="foregiftPeriods" />
    <result column="finProdType" jdbcType="TINYINT" property="finProdType" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, rentPeriods, foregiftPeriods, finProdType
  </sql>
  <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comm_paytype
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="delete" parameterType="java.lang.Integer">
    delete from comm_paytype
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.mogoroom.service.flat.domain.RoomPricePayType" useGeneratedKeys="true">
    insert into comm_paytype
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="rentPeriods != null">
        rentPeriods,
      </if>
      <if test="foregiftPeriods != null">
        foregiftPeriods,
      </if>
      <if test="finProdType != null">
        finProdType,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="rentPeriods != null">
        #{rentPeriods,jdbcType=TINYINT},
      </if>
      <if test="foregiftPeriods != null">
        #{foregiftPeriods,jdbcType=TINYINT},
      </if>
      <if test="finProdType != null">
        #{finProdType,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="com.mogoroom.service.flat.domain.RoomPricePayType">
    update comm_paytype
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="rentPeriods != null">
        rentPeriods = #{rentPeriods,jdbcType=TINYINT},
      </if>
      <if test="foregiftPeriods != null">
        foregiftPeriods = #{foregiftPeriods,jdbcType=TINYINT},
      </if>
      <if test="finProdType != null">
        finProdType = #{finProdType,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comm_paytype
  </select>

  <select id="selectListPageInfo" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comm_paytype
	where 1=1
	    <if test="po.id != null">
          and id = #{po.id,jdbcType=INTEGER}
    </if>
    <if test="po.name != null">
          and name = #{po.name,jdbcType=VARCHAR}
    </if>
    <if test="po.rentPeriods != null">
          and rentPeriods = #{po.rentPeriods,jdbcType=TINYINT}
    </if>
    <if test="po.foregiftPeriods != null">
          and foregiftPeriods = #{po.foregiftPeriods,jdbcType=TINYINT}
    </if>
    <if test="po.finProdType != null">
          and finProdType = #{po.finProdType,jdbcType=TINYINT}
    </if>

  </select>

  <delete id="deleteByFeature" parameterType="com.mogoroom.service.flat.domain.RoomPricePayType">
    delete from comm_paytype
	<where> 
	      <if test="id != null">
          and id = #{id,jdbcType=INTEGER}
    </if>
    <if test="name != null">
          and name = #{name,jdbcType=VARCHAR}
    </if>
    <if test="rentPeriods != null">
          and rentPeriods = #{rentPeriods,jdbcType=TINYINT}
    </if>
    <if test="foregiftPeriods != null">
          and foregiftPeriods = #{foregiftPeriods,jdbcType=TINYINT}
    </if>
    <if test="finProdType != null">
          and finProdType = #{finProdType,jdbcType=TINYINT}
    </if>

 </where>
    </delete>

  <select id="selectByFeature" parameterType="com.mogoroom.service.flat.domain.RoomPricePayType" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comm_paytype
	where 1=1
	    <if test="id != null">
          and id = #{id,jdbcType=INTEGER}
    </if>
    <if test="name != null">
          and name = #{name,jdbcType=VARCHAR}
    </if>
    <if test="rentPeriods != null">
          and rentPeriods = #{rentPeriods,jdbcType=TINYINT}
    </if>
    <if test="foregiftPeriods != null">
          and foregiftPeriods = #{foregiftPeriods,jdbcType=TINYINT}
    </if>
    <if test="finProdType != null">
          and finProdType = #{finProdType,jdbcType=TINYINT}
    </if>

  </select>

  <select id="selectByFieldList" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comm_paytype
    where ${field} in
    <foreach close=")" collection="values" item="val" open="(" separator=",">
	        #{val}
  </foreach>
  </select>

<select id="selectByCriteria" parameterType="com.mogoroom.service.base.dao.QCriteria" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM comm_paytype
		<where>
			<if test="conditionAndRelations != null and conditionAndRelations.size() &gt; 0">
				<foreach collection="conditionAndRelations" item="cr">
					${cr.andOr}
					<foreach close=")" collection="cr.conditions" item="c" open="(" separator="AND">
						${c.field} ${c.op}
						<choose>
							<when test="c.valueList != null">
								<foreach close=")" collection="c.valueList" item="val" open="(" separator=",">
									#{val}
								</foreach>
							</when>
							<when test="c.value != null">
								#{c.value}
							</when>
						</choose>

					</foreach>

				</foreach>
			</if>
		</where>
		<if test="orderBys != null and orderBys.size() &gt; 0">
			ORDER BY
			<foreach collection="orderBys" item="ob" separator=",">
				${ob.orderBySql}
			</foreach>
		</if>
		<if test="limit != null">
		   LIMIT #{limit}
		   <if test="offset != null">
		   OFFSET #{offset}
		   </if>
		</if>
	</select>
  <resultMap id="BaseResultMap" type="com.mogoroom.service.flat.domain.RoomPricePayType">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="rentPeriods" jdbcType="TINYINT" property="rentPeriods" />
    <result column="foregiftPeriods" jdbcType="TINYINT" property="foregiftPeriods" />
    <result column="finProdType" jdbcType="TINYINT" property="finProdType" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, rentPeriods, foregiftPeriods, finProdType
  </sql>
  <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comm_paytype
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="delete" parameterType="java.lang.Integer">
    delete from comm_paytype
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.mogoroom.service.flat.domain.RoomPricePayType" useGeneratedKeys="true">
    insert into comm_paytype
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="rentPeriods != null">
        rentPeriods,
      </if>
      <if test="foregiftPeriods != null">
        foregiftPeriods,
      </if>
      <if test="finProdType != null">
        finProdType,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="rentPeriods != null">
        #{rentPeriods,jdbcType=TINYINT},
      </if>
      <if test="foregiftPeriods != null">
        #{foregiftPeriods,jdbcType=TINYINT},
      </if>
      <if test="finProdType != null">
        #{finProdType,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="com.mogoroom.service.flat.domain.RoomPricePayType">
    update comm_paytype
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="rentPeriods != null">
        rentPeriods = #{rentPeriods,jdbcType=TINYINT},
      </if>
      <if test="foregiftPeriods != null">
        foregiftPeriods = #{foregiftPeriods,jdbcType=TINYINT},
      </if>
      <if test="finProdType != null">
        finProdType = #{finProdType,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comm_paytype
  </select>

  <select id="selectListPageInfo" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comm_paytype
	where 1=1
	    <if test="po.id != null">
          and id = #{po.id,jdbcType=INTEGER}
    </if>
    <if test="po.name != null">
          and name = #{po.name,jdbcType=VARCHAR}
    </if>
    <if test="po.rentPeriods != null">
          and rentPeriods = #{po.rentPeriods,jdbcType=TINYINT}
    </if>
    <if test="po.foregiftPeriods != null">
          and foregiftPeriods = #{po.foregiftPeriods,jdbcType=TINYINT}
    </if>
    <if test="po.finProdType != null">
          and finProdType = #{po.finProdType,jdbcType=TINYINT}
    </if>

  </select>

  <delete id="deleteByFeature" parameterType="com.mogoroom.service.flat.domain.RoomPricePayType">
    delete from comm_paytype
	<where> 
	      <if test="id != null">
          and id = #{id,jdbcType=INTEGER}
    </if>
    <if test="name != null">
          and name = #{name,jdbcType=VARCHAR}
    </if>
    <if test="rentPeriods != null">
          and rentPeriods = #{rentPeriods,jdbcType=TINYINT}
    </if>
    <if test="foregiftPeriods != null">
          and foregiftPeriods = #{foregiftPeriods,jdbcType=TINYINT}
    </if>
    <if test="finProdType != null">
          and finProdType = #{finProdType,jdbcType=TINYINT}
    </if>

 </where>
    </delete>

  <select id="selectByFeature" parameterType="com.mogoroom.service.flat.domain.RoomPricePayType" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comm_paytype
	where 1=1
	    <if test="id != null">
          and id = #{id,jdbcType=INTEGER}
    </if>
    <if test="name != null">
          and name = #{name,jdbcType=VARCHAR}
    </if>
    <if test="rentPeriods != null">
          and rentPeriods = #{rentPeriods,jdbcType=TINYINT}
    </if>
    <if test="foregiftPeriods != null">
          and foregiftPeriods = #{foregiftPeriods,jdbcType=TINYINT}
    </if>
    <if test="finProdType != null">
          and finProdType = #{finProdType,jdbcType=TINYINT}
    </if>

  </select>

  <select id="selectByFieldList" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comm_paytype
    where ${field} in
    <foreach close=")" collection="values" item="val" open="(" separator=",">
	        #{val}
  </foreach>
  </select>

<select id="selectByCriteria" parameterType="com.mogoroom.service.base.dao.QCriteria" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM comm_paytype
		<where>
			<if test="conditionAndRelations != null and conditionAndRelations.size() &gt; 0">
				<foreach collection="conditionAndRelations" item="cr">
					${cr.andOr}
					<foreach close=")" collection="cr.conditions" item="c" open="(" separator="AND">
						${c.field} ${c.op}
						<choose>
							<when test="c.valueList != null">
								<foreach close=")" collection="c.valueList" item="val" open="(" separator=",">
									#{val}
								</foreach>
							</when>
							<when test="c.value != null">
								#{c.value}
							</when>
						</choose>

					</foreach>

				</foreach>
			</if>
		</where>
		<if test="orderBys != null and orderBys.size() &gt; 0">
			ORDER BY
			<foreach collection="orderBys" item="ob" separator=",">
				${ob.orderBySql}
			</foreach>
		</if>
		<if test="limit != null">
		   LIMIT #{limit}
		   <if test="offset != null">
		   OFFSET #{offset}
		   </if>
		</if>
	</select>

</mapper>