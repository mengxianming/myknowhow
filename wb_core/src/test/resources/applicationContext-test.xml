<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">


	<context:property-placeholder location="classpath:application.properties"
		file-encoding="utf-8" />
		
	<context:annotation-config />
	
	<!-- 数据源配置 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- mybatis文件配置，扫描所有mapper文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
		p:dataSource-ref="dataSource" p:configLocation="classpath:mybatis-config.xml"
		p:mapperLocations="classpath:mapper/*.xml" /><!-- configLocation为mybatis属性 
		mapperLocations为所有mapper -->

<!-- 	spring与mybatis整合配置，扫描所有dao -->
<!-- 	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" -->
<!-- 	p:basePackage="com.autonavi.tsp.workbackend.dao" -->
<!-- 	p:sqlSessionFactoryBeanName="sqlSessionFactory"/> -->
	<!-- 所有dao -->
<!-- 	<bean id="naviScreenDpiMapper" class="org.mybatis.spring.mapper.MapperFactoryBean"> -->
<!-- 		<property name="mapperInterface" -->
<!-- 			value="com.autonavi.tsp.workbackend.dao.NaviScreenDpiMapper" /> -->
<!-- 		<property name="sqlSessionFactory" ref="sqlSessionFactory" /> -->
<!-- 	</bean> -->
<!-- 	<bean id="naviWhiteListMapper" class="org.mybatis.spring.mapper.MapperFactoryBean"> -->
<!-- 		<property name="mapperInterface" -->
<!-- 			value="com.autonavi.tsp.workbackend.dao.NaviWhiteListMapper" /> -->
<!-- 		<property name="sqlSessionFactory" ref="sqlSessionFactory" /> -->
<!-- 	</bean> -->


	<!-- 配置事务管理器 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

   <!-- tets services bean -->
	<bean id="naviScreenDpiService"
		class="com.autonavi.tsp.workbackend.service.impl.NaviScreenDpiServiceImpl" autowire="byType">		
	</bean>
	<bean id="naviWhiteListService"
		class="com.autonavi.tsp.workbackend.service.impl.NaviWhiteListServiceImpl" autowire="byType">		
	</bean>
	<bean id="naviResourceVersionService"
		class="com.autonavi.tsp.workbackend.service.impl.NaviResourceVersionServiceImpl" autowire="byType">		
	</bean>
	<bean id="naviResourcePublishService"
		class="com.autonavi.tsp.workbackend.service.impl.NaviResourcePublishServiceImpl" autowire="byType">		
	</bean>
	<bean id="naviMapCityInfoService"
		class="com.autonavi.tsp.workbackend.service.impl.NaviMapCityInfoServiceImpl" autowire="byType">		
	</bean>
	<bean id="naviBaseResInfoService"
		class="com.autonavi.tsp.workbackend.service.impl.NaviBaseResInfoServiceImpl" autowire="byType">		
	</bean>
	
	<bean id="naviCityListService"
		class="com.autonavi.tsp.workbackend.service.impl.NaviCityListServiceImpl" autowire="byType">		
	</bean>
	<bean id="mapUpdateService"
		class="com.autonavi.tsp.workbackend.service.impl.MapUpdateServiceImpl" autowire="byType">		
	</bean>
	<bean id="mapUpdateBytesService"
		class="com.autonavi.tsp.workbackend.service.impl.MapUpdateBytesServiceImpl" autowire="byType">		
	</bean>
	<bean id="sessionService" class="org.mockito.Mockito" factory-method="mock">
		<constructor-arg value="com.autonavi.tsp.workbackend.service.ISessionService" />
	</bean>
	
	<!-- 扫描所有的dao实现类，并注入依赖 -->
	<context:component-scan base-package="com.autonavi.tsp.workbackend.dao.impl" >
	</context:component-scan>

</beans>