<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration 
PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
       <!-- 配置mybatis的缓存，延迟加载等等一系列属性 -->
        <settings>  
        <!-- 全局映射器启用缓存 -->  
        <setting name="cacheEnabled" value="false" />  
        <!-- 查询时，关闭关联对象即时加载以提高性能 -->  
        <setting name="lazyLoadingEnabled" value="true" />  
        <!-- 设置关联对象加载的形态，此处为按需加载字段(加载字段由SQL指 定)，不会加载关联表的所有字段，以提高性能 -->  
        <setting name="aggressiveLazyLoading" value="false" />  
        <!-- 对于未知的SQL查询，允许返回不同的结果集以达到通用的效果 -->  
        <setting name="multipleResultSetsEnabled" value="true" />  
        <!-- 允许使用列标签代替列名 -->  
        <setting name="useColumnLabel" value="true" />  
        <!-- 允许使用自定义的主键值(比如由程序生成的UUID 32位编码作为键值)，数据表的PK生成策略将被覆盖 -->  
        <!-- <setting name="useGeneratedKeys" value="true" /> -->  
        <!-- 给予被嵌套的resultMap以字段-属性的映射支持 -->  
        <setting name="autoMappingBehavior" value="FULL" />  
        <!-- 对于批量更新操作缓存SQL以提高性能 -->  
        <setting name="defaultExecutorType" value="SIMPLE" />  
        <!-- 数据库超过25000秒仍未响应则超时 -->  
        <setting name="defaultStatementTimeout" value="25000" />  
    </settings> 
       <!-- 全局别名设置，在映射文件中只需写别名，而不必写出整个类路径 -->  
    <typeAliases>
        <typeAlias alias="romVersionMapper" type="com.autonavi.tsp.workbackend.dao.RomVersionMapper"/>
        <typeAlias alias="romPushMapper" type="com.autonavi.tsp.workbackend.dao.RomPushMapper"/>
        <typeAlias alias="romMatchCarMapper" type="com.autonavi.tsp.workbackend.dao.RomMatchCarMapper"/>
        <typeAlias alias="vehicleBrandMapper" type="com.autonavi.tsp.workbackend.dao.VehicleBrandMapper"/>
        <typeAlias alias="vehicleCompanyMapper" type="com.autonavi.tsp.workbackend.dao.VehicleCompanyMapper"/>
        <typeAlias alias="vehicleVersionMapper" type="com.autonavi.tsp.workbackend.dao.VehicleVersionMapper"/>
        <typeAlias alias="vehicleSeriesMapper" type="com.autonavi.tsp.workbackend.dao.VehicleSeriesMapper"/>
        <typeAlias alias="vehicleYearMapper" type="com.autonavi.tsp.workbackend.dao.VehicleYearMapper"/>
        <typeAlias alias="naviApkVersionMapper" type="com.autonavi.tsp.workbackend.dao.NaviApkVersionMapper"/>
        <typeAlias alias="naviResourcePublishMapper" type="com.autonavi.tsp.workbackend.dao.NaviResourcePublishMapper"/>
        <typeAlias alias="naviBaseResInfoMapper" type="com.autonavi.tsp.workbackend.dao.NaviBaseResInfoMapper"/>
        <typeAlias alias="naviResourceVersionMapper" type="com.autonavi.tsp.workbackend.dao.NaviResourceVersionMapper"/>
        <typeAlias alias="naviMapCityInfoMapper" type="com.autonavi.tsp.workbackend.dao.NaviMapCityInfoMapper"/>
    </typeAliases>
    
	<plugins>
	        <!-- com.github.pagehelper为PageHelper类所在包名 -->
	        <plugin interceptor="com.autonavi.tsp.workbackend.util.page.PageHelper">
	            <property name="dialect" value="mysql"/>
	            <!-- 该参数默认为false -->
	            <!-- 设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用 -->
	            <!-- 和startPage中的pageNum效果一样-->
	            <property name="offsetAsPageNum" value="false"/>
	            <!-- 该参数默认为false -->
	            <!-- 设置为true时，使用RowBounds分页会进行count查询 -->
	            <property name="rowBoundsWithCount" value="true"/>
	            <!-- 设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果 -->
	            <!-- （相当于没有执行分页查询，但是返回结果仍然是Page类型）-->
	            <property name="pageSizeZero" value="false"/>
	            <!-- 分页参数合理化，默认false禁用 -->
	            <!-- 启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页 -->
	            <!-- 禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据 -->
	            <property name="reasonable" value="false"/>
	        </plugin>
	    </plugins>

    <!-- 映射map -->
    <mappers> 
    </mappers>
</configuration>